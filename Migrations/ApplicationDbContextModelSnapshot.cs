// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using tcc1_api.Data;

#nullable disable

namespace tcc1_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4d73186a-f5fb-417b-a08c-c4cdd0fd40bd",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "9426746c-534a-4569-9db0-d3cd125c5cae",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("tcc1_api.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("tcc1_api.Models.Colecao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AppUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeColecao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("NomeColecao")
                        .IsUnique();

                    b.ToTable("Colecoes");
                });

            modelBuilder.Entity("tcc1_api.Models.Contribui", b =>
                {
                    b.Property<int>("ContribuidorId")
                        .HasColumnType("integer");

                    b.Property<int>("EdicaoId")
                        .HasColumnType("integer");

                    b.Property<string>("Funcao")
                        .HasColumnType("text");

                    b.HasKey("ContribuidorId", "EdicaoId", "Funcao");

                    b.HasIndex("EdicaoId");

                    b.ToTable("Contribui");

                    b.HasData(
                        new
                        {
                            ContribuidorId = 1,
                            EdicaoId = 3,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 1,
                            EdicaoId = 17,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 1,
                            EdicaoId = 18,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 1,
                            EdicaoId = 19,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 1,
                            EdicaoId = 3,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 1,
                            EdicaoId = 17,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 1,
                            EdicaoId = 18,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 1,
                            EdicaoId = 19,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 20,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 21,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 22,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 23,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 24,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 25,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 26,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 27,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 29,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 30,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 31,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 2,
                            EdicaoId = 32,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 20,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 21,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 22,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 23,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 24,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 25,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 26,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 27,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 29,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 30,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 31,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 3,
                            EdicaoId = 32,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 5,
                            EdicaoId = 7,
                            Funcao = "Mangaka"
                        },
                        new
                        {
                            ContribuidorId = 5,
                            EdicaoId = 8,
                            Funcao = "Mangaka"
                        },
                        new
                        {
                            ContribuidorId = 5,
                            EdicaoId = 9,
                            Funcao = "Mangaka"
                        },
                        new
                        {
                            ContribuidorId = 5,
                            EdicaoId = 10,
                            Funcao = "Mangaka"
                        },
                        new
                        {
                            ContribuidorId = 5,
                            EdicaoId = 11,
                            Funcao = "Mangaka"
                        },
                        new
                        {
                            ContribuidorId = 5,
                            EdicaoId = 12,
                            Funcao = "Mangaka"
                        },
                        new
                        {
                            ContribuidorId = 5,
                            EdicaoId = 13,
                            Funcao = "Mangaka"
                        },
                        new
                        {
                            ContribuidorId = 5,
                            EdicaoId = 14,
                            Funcao = "Mangaka"
                        },
                        new
                        {
                            ContribuidorId = 5,
                            EdicaoId = 15,
                            Funcao = "Mangaka"
                        },
                        new
                        {
                            ContribuidorId = 5,
                            EdicaoId = 16,
                            Funcao = "Mangaka"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 37,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 38,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 39,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 40,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 41,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 42,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 43,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 44,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 45,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 46,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 47,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 48,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 49,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 6,
                            EdicaoId = 50,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 7,
                            EdicaoId = 37,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 7,
                            EdicaoId = 38,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 7,
                            EdicaoId = 39,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 7,
                            EdicaoId = 40,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 7,
                            EdicaoId = 41,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 7,
                            EdicaoId = 42,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 7,
                            EdicaoId = 43,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 8,
                            EdicaoId = 44,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 8,
                            EdicaoId = 45,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 9,
                            EdicaoId = 46,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 10,
                            EdicaoId = 47,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 10,
                            EdicaoId = 48,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 11,
                            EdicaoId = 49,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 11,
                            EdicaoId = 50,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 12,
                            EdicaoId = 33,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 12,
                            EdicaoId = 34,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 12,
                            EdicaoId = 35,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 12,
                            EdicaoId = 36,
                            Funcao = "Roteirista"
                        },
                        new
                        {
                            ContribuidorId = 13,
                            EdicaoId = 33,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 13,
                            EdicaoId = 34,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 13,
                            EdicaoId = 35,
                            Funcao = "Desenhista"
                        },
                        new
                        {
                            ContribuidorId = 13,
                            EdicaoId = 36,
                            Funcao = "Desenhista"
                        });
                });

            modelBuilder.Entity("tcc1_api.Models.Contribuidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataNasc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Nome", "DataNasc")
                        .IsUnique();

                    b.ToTable("Contribuidores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataNasc = new DateTime(1957, 1, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "M",
                            Nome = "Frank Miller"
                        },
                        new
                        {
                            Id = 2,
                            DataNasc = new DateTime(1953, 11, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "M",
                            Nome = "Alan Moore"
                        },
                        new
                        {
                            Id = 3,
                            DataNasc = new DateTime(1949, 4, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "M",
                            Nome = "Dave Gibbons"
                        },
                        new
                        {
                            Id = 5,
                            DataNasc = new DateTime(1986, 10, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "M",
                            Nome = "Yusuke Murata"
                        },
                        new
                        {
                            Id = 6,
                            DataNasc = new DateTime(1977, 8, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "M",
                            Nome = "Al Ewing"
                        },
                        new
                        {
                            Id = 7,
                            DataNasc = new DateTime(1983, 5, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "M",
                            Nome = "Martin Coccolo"
                        },
                        new
                        {
                            Id = 8,
                            DataNasc = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "M",
                            Nome = "Ibraim Roberson"
                        },
                        new
                        {
                            Id = 9,
                            DataNasc = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "M",
                            Nome = "Carlos Magno"
                        },
                        new
                        {
                            Id = 10,
                            DataNasc = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "F",
                            Nome = "Valentina Pinti"
                        },
                        new
                        {
                            Id = 11,
                            DataNasc = new DateTime(1985, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "F",
                            Nome = "Jan Bazaldua"
                        },
                        new
                        {
                            Id = 12,
                            DataNasc = new DateTime(1960, 9, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "M",
                            Nome = "Kurt Busiek"
                        },
                        new
                        {
                            Id = 13,
                            DataNasc = new DateTime(1970, 1, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Foto = "foto",
                            Genero = "M",
                            Nome = "Alex Ross"
                        });
                });

            modelBuilder.Entity("tcc1_api.Models.Edicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FotoCapa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<int>("SerieId")
                        .HasColumnType("integer");

                    b.Property<string>("UnMonetaria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SerieId");

                    b.HasIndex("Numero", "DataLancamento", "SerieId")
                        .IsUnique();

                    b.ToTable("Edicoes");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            DataLancamento = new DateTime(2012, 12, 8, 15, 4, 13, 155, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/One_Punch_Man/OPM_1/OPM_1.png",
                            Numero = "1",
                            Preco = 440m,
                            SerieId = 5,
                            UnMonetaria = "JPY"
                        },
                        new
                        {
                            Id = 8,
                            DataLancamento = new DateTime(2012, 12, 4, 15, 4, 13, 155, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/One_Punch_Man/OPM_2/OPM_2.png",
                            Numero = "2",
                            Preco = 440m,
                            SerieId = 5,
                            UnMonetaria = "JPY"
                        },
                        new
                        {
                            Id = 9,
                            DataLancamento = new DateTime(2013, 4, 4, 14, 4, 13, 155, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/One_Punch_Man/OPM_3/OPM_3.png",
                            Numero = "3",
                            Preco = 440m,
                            SerieId = 5,
                            UnMonetaria = "JPY"
                        },
                        new
                        {
                            Id = 10,
                            DataLancamento = new DateTime(2013, 8, 2, 14, 4, 13, 155, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/One_Punch_Man/OPM_4/OPM_4.png",
                            Numero = "4",
                            Preco = 440m,
                            SerieId = 5,
                            UnMonetaria = "JPY"
                        },
                        new
                        {
                            Id = 11,
                            DataLancamento = new DateTime(2013, 12, 4, 15, 4, 13, 155, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/One_Punch_Man/OPM_5/OPM_5.png",
                            Numero = "5",
                            Preco = 440m,
                            SerieId = 5,
                            UnMonetaria = "JPY"
                        },
                        new
                        {
                            Id = 12,
                            DataLancamento = new DateTime(2014, 5, 2, 14, 4, 13, 155, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/One_Punch_Man/OPM_6/OPM_6.png",
                            Numero = "6",
                            Preco = 440m,
                            SerieId = 5,
                            UnMonetaria = "JPY"
                        },
                        new
                        {
                            Id = 13,
                            DataLancamento = new DateTime(2014, 12, 4, 15, 4, 13, 155, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/One_Punch_Man/OPM_7/OPM_7.png",
                            Numero = "7",
                            Preco = 440m,
                            SerieId = 5,
                            UnMonetaria = "JPY"
                        },
                        new
                        {
                            Id = 14,
                            DataLancamento = new DateTime(2015, 4, 3, 14, 4, 13, 155, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/One_Punch_Man/OPM_8/OPM_8.png",
                            Numero = "8",
                            Preco = 440m,
                            SerieId = 5,
                            UnMonetaria = "JPY"
                        },
                        new
                        {
                            Id = 15,
                            DataLancamento = new DateTime(2015, 8, 4, 14, 4, 13, 155, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/One_Punch_Man/OPM_9/OPM_9.png",
                            Numero = "9",
                            Preco = 440m,
                            SerieId = 5,
                            UnMonetaria = "JPY"
                        },
                        new
                        {
                            Id = 16,
                            DataLancamento = new DateTime(2015, 12, 4, 15, 4, 13, 155, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/One_Punch_Man/OPM_10/OPM_10.png",
                            Numero = "10",
                            Preco = 440m,
                            SerieId = 5,
                            UnMonetaria = "JPY"
                        },
                        new
                        {
                            Id = 37,
                            DataLancamento = new DateTime(2023, 10, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_1/Immortal_Thor_Vol_1_1.jpg",
                            Numero = "1A",
                            Preco = 6.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 38,
                            DataLancamento = new DateTime(2023, 11, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_2/Immortal_Thor_Vol_1_2.jpg",
                            Numero = "2A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 39,
                            DataLancamento = new DateTime(2023, 12, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_3/Immortal_Thor_Vol_1_3.jpg",
                            Numero = "3A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 40,
                            DataLancamento = new DateTime(2024, 1, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_4/Immortal_Thor_Vol_1_4.jpg",
                            Numero = "4A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 41,
                            DataLancamento = new DateTime(2024, 2, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_5/Immortal_Thor_Vol_1_5.jpg",
                            Numero = "5A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 42,
                            DataLancamento = new DateTime(2024, 3, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_6/Immortal_Thor_Vol_1_6.jpg",
                            Numero = "6A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 43,
                            DataLancamento = new DateTime(2024, 4, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_7/Immortal_Thor_Vol_1_7.jpg",
                            Numero = "7A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 44,
                            DataLancamento = new DateTime(2024, 5, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_8/Immortal_Thor_Vol_1_8.jpg",
                            Numero = "8A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 45,
                            DataLancamento = new DateTime(2024, 6, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_9/Immortal_Thor_Vol_1_9.jpg",
                            Numero = "9A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 46,
                            DataLancamento = new DateTime(2024, 7, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_10/Immortal_Thor_Vol_1_10.jpg",
                            Numero = "10A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 47,
                            DataLancamento = new DateTime(2024, 7, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_11/Immortal_Thor_Vol_1_11.jpg",
                            Numero = "11A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 48,
                            DataLancamento = new DateTime(2024, 8, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_12/Immortal_Thor_Vol_1_12.jpg",
                            Numero = "12A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 49,
                            DataLancamento = new DateTime(2024, 10, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_13/Immortal_Thor_Vol_1_13.jpg",
                            Numero = "13A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 50,
                            DataLancamento = new DateTime(2024, 10, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Immortal_Thor_Vol_1/Immortal_Thor_Vol_1_14/Immortal_Thor_Vol_1_14.jpg",
                            Numero = "14A",
                            Preco = 4.99m,
                            SerieId = 3,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 33,
                            DataLancamento = new DateTime(1994, 1, 1, 17, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Marvels_Vol_1/Marvels_Vol_1_1/Marvels_Vol_1_1.jpg",
                            Numero = "1A",
                            Preco = 5.95m,
                            SerieId = 4,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 34,
                            DataLancamento = new DateTime(1994, 2, 1, 17, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Marvels_Vol_1/Marvels_Vol_1_2/Marvels_Vol_1_2.jpg",
                            Numero = "2A",
                            Preco = 5.95m,
                            SerieId = 4,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 35,
                            DataLancamento = new DateTime(1994, 3, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Marvels_Vol_1/Marvels_Vol_1_3/Marvels_Vol_1_3.jpg",
                            Numero = "3A",
                            Preco = 5.95m,
                            SerieId = 4,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 36,
                            DataLancamento = new DateTime(1994, 4, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Marvels_Vol_1/Marvels_Vol_1_4/Marvels_Vol_1_4.jpg",
                            Numero = "4A",
                            Preco = 5.95m,
                            SerieId = 4,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 3,
                            DataLancamento = new DateTime(1986, 3, 1, 13, 23, 50, 846, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Batman_-_Dark_Knight_Returns/Batman_-_Dark_Knight_Returns_1/Batman_-_Dark_Knight_Returns_1.jpg",
                            Numero = "1A",
                            Preco = 2.95m,
                            SerieId = 1,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 17,
                            DataLancamento = new DateTime(1986, 4, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Batman_-_Dark_Knight_Returns/Batman_-_Dark_Knight_Returns_2/Batman_-_Dark_Knight_Returns_2.jpg",
                            Numero = "2A",
                            Preco = 2.95m,
                            SerieId = 1,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 18,
                            DataLancamento = new DateTime(1986, 5, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Batman_-_Dark_Knight_Returns/Batman_-_Dark_Knight_Returns_3/Batman_-_Dark_Knight_Returns_3.jpg",
                            Numero = "3A",
                            Preco = 2.95m,
                            SerieId = 1,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 19,
                            DataLancamento = new DateTime(1986, 6, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Batman_-_Dark_Knight_Returns/Batman_-_Dark_Knight_Returns_4/Batman_-_Dark_Knight_Returns_4.jpg",
                            Numero = "4A",
                            Preco = 2.95m,
                            SerieId = 1,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 20,
                            DataLancamento = new DateTime(1986, 9, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_1/Watchmen_1.jpg",
                            Numero = "1A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 21,
                            DataLancamento = new DateTime(1986, 10, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_2/Watchmen_2.jpg",
                            Numero = "2A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 22,
                            DataLancamento = new DateTime(1986, 11, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_3/Watchmen_3.jpg",
                            Numero = "3A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 23,
                            DataLancamento = new DateTime(1986, 12, 1, 17, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_4/Watchmen_4.jpg",
                            Numero = "4A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 24,
                            DataLancamento = new DateTime(1987, 1, 1, 17, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_5/Watchmen_5.jpg",
                            Numero = "5A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 25,
                            DataLancamento = new DateTime(1987, 2, 1, 17, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_6/Watchmen_6.jpg",
                            Numero = "6A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 26,
                            DataLancamento = new DateTime(1987, 3, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_7/Watchmen_7.jpg",
                            Numero = "7A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 27,
                            DataLancamento = new DateTime(1987, 4, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_8/Watchmen_8.jpg",
                            Numero = "8A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 29,
                            DataLancamento = new DateTime(1987, 5, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_9/Watchmen_9.jpg",
                            Numero = "9A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 30,
                            DataLancamento = new DateTime(1987, 7, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_10/Watchmen_10.jpg",
                            Numero = "10A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 31,
                            DataLancamento = new DateTime(1987, 8, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_11/Watchmen_11.jpg",
                            Numero = "11A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        },
                        new
                        {
                            Id = 32,
                            DataLancamento = new DateTime(1987, 10, 1, 16, 37, 26, 156, DateTimeKind.Utc),
                            FotoCapa = "https://robng-tcc-arquivos.s3.us-east-1.amazonaws.com/Watchmen_Vol_1/Watchmen_Vol_1_12/Watchmen_12.jpg",
                            Numero = "12A",
                            Preco = 1.50m,
                            SerieId = 2,
                            UnMonetaria = "USD"
                        });
                });

            modelBuilder.Entity("tcc1_api.Models.Editora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnoCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AnoCriacao", "Nome")
                        .IsUnique();

                    b.ToTable("Editoras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnoCriacao = new DateTime(1934, 10, 6, 17, 46, 22, 526, DateTimeKind.Utc),
                            Nome = "DC Comics"
                        },
                        new
                        {
                            Id = 2,
                            AnoCriacao = new DateTime(1939, 10, 6, 17, 46, 22, 526, DateTimeKind.Utc),
                            Nome = "Marvel Comics"
                        },
                        new
                        {
                            Id = 3,
                            AnoCriacao = new DateTime(1949, 10, 7, 8, 6, 3, 879, DateTimeKind.Utc),
                            Nome = "Shueisha"
                        });
                });

            modelBuilder.Entity("tcc1_api.Models.Exemplar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ColecaoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAquisicao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EdicaoId")
                        .HasColumnType("integer");

                    b.Property<string>("EstadoConservacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ColecaoId");

                    b.HasIndex("EdicaoId");

                    b.ToTable("Exemplares");
                });

            modelBuilder.Entity("tcc1_api.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("SerieId")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SerieId");

                    b.HasIndex("Tipo", "SerieId")
                        .IsUnique();

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SerieId = 1,
                            Tipo = "Drama"
                        },
                        new
                        {
                            Id = 2,
                            SerieId = 5,
                            Tipo = "Ação"
                        },
                        new
                        {
                            Id = 3,
                            SerieId = 2,
                            Tipo = "Drama"
                        },
                        new
                        {
                            Id = 4,
                            SerieId = 3,
                            Tipo = "Fantasia"
                        },
                        new
                        {
                            Id = 5,
                            SerieId = 4,
                            Tipo = "Drama"
                        });
                });

            modelBuilder.Entity("tcc1_api.Models.Manga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Demografia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeJap")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SerieId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SerieId")
                        .IsUnique();

                    b.ToTable("Mangas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Demografia = "Seinen",
                            NomeJap = "ワンパンマン",
                            SerieId = 5
                        });
                });

            modelBuilder.Entity("tcc1_api.Models.Serie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CicloNum")
                        .HasColumnType("integer");

                    b.Property<int>("EditoraId")
                        .HasColumnType("integer");

                    b.Property<string>("EstadoPubAtual")
                        .HasColumnType("text");

                    b.Property<string>("NomeInter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EditoraId");

                    b.HasIndex("NomeInter", "CicloNum", "EditoraId")
                        .IsUnique();

                    b.ToTable("Series");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CicloNum = 1,
                            EditoraId = 1,
                            EstadoPubAtual = "FINALIZADO",
                            NomeInter = "The Dark Knight Returns"
                        },
                        new
                        {
                            Id = 2,
                            CicloNum = 1,
                            EditoraId = 1,
                            EstadoPubAtual = "FINALIZADO",
                            NomeInter = "Watchmen"
                        },
                        new
                        {
                            Id = 3,
                            CicloNum = 1,
                            EditoraId = 2,
                            EstadoPubAtual = "EM ANDAMENTO",
                            NomeInter = "Immortal Thor"
                        },
                        new
                        {
                            Id = 4,
                            CicloNum = 1,
                            EditoraId = 2,
                            EstadoPubAtual = "FINALIZADO",
                            NomeInter = "Marvels"
                        },
                        new
                        {
                            Id = 5,
                            CicloNum = 1,
                            EditoraId = 3,
                            EstadoPubAtual = "EM ANDAMENTO",
                            NomeInter = "One Punch-Man"
                        });
                });

            modelBuilder.Entity("tcc1_api.Models.Tankobon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EdicaoId")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroCapitulos")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EdicaoId")
                        .IsUnique();

                    b.ToTable("Tankobons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EdicaoId = 7,
                            NumeroCapitulos = 8
                        },
                        new
                        {
                            Id = 2,
                            EdicaoId = 8,
                            NumeroCapitulos = 5
                        },
                        new
                        {
                            Id = 3,
                            EdicaoId = 9,
                            NumeroCapitulos = 8
                        },
                        new
                        {
                            Id = 4,
                            EdicaoId = 10,
                            NumeroCapitulos = 6
                        },
                        new
                        {
                            Id = 5,
                            EdicaoId = 11,
                            NumeroCapitulos = 7
                        },
                        new
                        {
                            Id = 6,
                            EdicaoId = 12,
                            NumeroCapitulos = 8
                        },
                        new
                        {
                            Id = 7,
                            EdicaoId = 13,
                            NumeroCapitulos = 8
                        },
                        new
                        {
                            Id = 8,
                            EdicaoId = 14,
                            NumeroCapitulos = 8
                        },
                        new
                        {
                            Id = 9,
                            EdicaoId = 15,
                            NumeroCapitulos = 8
                        },
                        new
                        {
                            Id = 10,
                            EdicaoId = 16,
                            NumeroCapitulos = 11
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("tcc1_api.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("tcc1_api.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tcc1_api.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("tcc1_api.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tcc1_api.Models.Colecao", b =>
                {
                    b.HasOne("tcc1_api.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("tcc1_api.Models.Contribui", b =>
                {
                    b.HasOne("tcc1_api.Models.Contribuidor", "Contribuidor")
                        .WithMany("Contribuicoes")
                        .HasForeignKey("ContribuidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tcc1_api.Models.Edicao", "Edicao")
                        .WithMany("Contribuicoes")
                        .HasForeignKey("EdicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contribuidor");

                    b.Navigation("Edicao");
                });

            modelBuilder.Entity("tcc1_api.Models.Edicao", b =>
                {
                    b.HasOne("tcc1_api.Models.Serie", "Serie")
                        .WithMany("Edicoes")
                        .HasForeignKey("SerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serie");
                });

            modelBuilder.Entity("tcc1_api.Models.Exemplar", b =>
                {
                    b.HasOne("tcc1_api.Models.Colecao", "Colecao")
                        .WithMany("Exemplares")
                        .HasForeignKey("ColecaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tcc1_api.Models.Edicao", "Edicao")
                        .WithMany("Exemplares")
                        .HasForeignKey("EdicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colecao");

                    b.Navigation("Edicao");
                });

            modelBuilder.Entity("tcc1_api.Models.Genero", b =>
                {
                    b.HasOne("tcc1_api.Models.Serie", "Serie")
                        .WithMany("Generos")
                        .HasForeignKey("SerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serie");
                });

            modelBuilder.Entity("tcc1_api.Models.Manga", b =>
                {
                    b.HasOne("tcc1_api.Models.Serie", "Serie")
                        .WithOne("Manga")
                        .HasForeignKey("tcc1_api.Models.Manga", "SerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serie");
                });

            modelBuilder.Entity("tcc1_api.Models.Serie", b =>
                {
                    b.HasOne("tcc1_api.Models.Editora", "Editora")
                        .WithMany("Series")
                        .HasForeignKey("EditoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editora");
                });

            modelBuilder.Entity("tcc1_api.Models.Tankobon", b =>
                {
                    b.HasOne("tcc1_api.Models.Edicao", "Edicao")
                        .WithOne("Tankobon")
                        .HasForeignKey("tcc1_api.Models.Tankobon", "EdicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edicao");
                });

            modelBuilder.Entity("tcc1_api.Models.Colecao", b =>
                {
                    b.Navigation("Exemplares");
                });

            modelBuilder.Entity("tcc1_api.Models.Contribuidor", b =>
                {
                    b.Navigation("Contribuicoes");
                });

            modelBuilder.Entity("tcc1_api.Models.Edicao", b =>
                {
                    b.Navigation("Contribuicoes");

                    b.Navigation("Exemplares");

                    b.Navigation("Tankobon");
                });

            modelBuilder.Entity("tcc1_api.Models.Editora", b =>
                {
                    b.Navigation("Series");
                });

            modelBuilder.Entity("tcc1_api.Models.Serie", b =>
                {
                    b.Navigation("Edicoes");

                    b.Navigation("Generos");

                    b.Navigation("Manga");
                });
#pragma warning restore 612, 618
        }
    }
}
